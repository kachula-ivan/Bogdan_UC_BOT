from aiogram import F, Router
from aiogram.types import CallbackQuery

from database.commands import db
from database.migrations import user as User
from keyboartds.inline import decline_register_accept, new_user

router = Router()


@router.callback_query(F.data.startswith('register:'))
async def register(call: CallbackQuery):
    try:
        telegram_id = call.data[len('register:'):]
        user = await db.get_user(int(telegram_id))

        await db.update_user(int(telegram_id), {'status': User.STATUS_REGISTER})

        try:
            await call.bot.send_message(int(telegram_id), f'‚úÖ –ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º! –í–∞—à–∏ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –≤—Ö–æ–¥–∞:\n'
                                                          f'–õ–æ–≥–∏–Ω: <code>{user.login}</code>\n'
                                                          f'–ü–∞—Ä–æ–ª—å: <code>{user.password}</code>')
        except:
            pass

        await call.message.answer(f'–î–∞–Ω–Ω—ã–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é: @{call.from_user.username}\n')
        await call.message.delete()
    except:
        await call.message.answer('–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞. –ù–∞–ø–∏—à–∏ –í–∞–Ω–∏')


@router.callback_query(F.data.startswith('unregister:'))
async def unregister(call: CallbackQuery):
    try:
        telegram_id = call.data[len('unregister:'):]

        await call.message.edit_text('–¢–æ—á–Ω–æ?')
        await call.message.edit_reply_markup(str(call.message.message_id), decline_register_accept(telegram_id))
    except:
        await call.message.answer('–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞. –ù–∞–ø–∏—à–∏ –í–∞–Ω–∏')


@router.callback_query(F.data.startswith('decline_register:'))
async def decline_register(call: CallbackQuery):
    try:
        telegram_id = call.data[len('decline_register:'):]

        await db.update_user(int(telegram_id), {'status': User.STATUS_DECLINED})

        try:
            await call.bot.send_message(int(telegram_id), f'‚ùå –í–∞–º –æ—Ç–∫–∞–∑–∞–Ω–æ –≤ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏')
        except:
            pass

        await call.message.answer('–û—Ç–∫–∞–∑–∞–Ω–æ')
        await call.message.delete()
    except:
        await call.message.answer('–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞. –ù–∞–ø–∏—à–∏ –í–∞–Ω–∏')


@router.callback_query(F.data.startswith('accept_register:'))
async def accept_register(call: CallbackQuery):
    try:
        telegram_id = call.data[len('accept_register:'):]
        user = await db.get_user(int(telegram_id))

        await call.message.edit_text(f'ü™™ –ù–æ–≤—ã–π —à–∞–Ω—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: \n'
                                     f'first_name: <b>{user.first_name}</b>\n'
                                     f'last_name: <b>{user.last_name}</b>\n'
                                     f'username: @{user.username}')
        await call.message.edit_reply_markup(str(call.message.message_id), new_user(user.telegram_id))
    except:
        await call.message.answer('–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞. –ù–∞–ø–∏—à–∏ –í–∞–Ω–∏')
